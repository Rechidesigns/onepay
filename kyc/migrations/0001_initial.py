# Generated by Django 4.2.2 on 2023-06-28 12:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("locations", "0002_delete_state"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="KycApplication",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="this is the unique identifier of an object",
                        primary_key=True,
                        serialize=False,
                        verbose_name="id",
                    ),
                ),
                (
                    "created_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Timestamp when the record was created.",
                        max_length=20,
                        verbose_name="Created Date",
                    ),
                ),
                (
                    "modified_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Modified date when the record was created.",
                        max_length=20,
                        verbose_name="Modified Date",
                    ),
                ),
                (
                    "legal_first_names",
                    models.CharField(
                        blank=True,
                        help_text="First name of the user submitting KYC application - As shown in documents.",
                        max_length=255,
                        null=True,
                        verbose_name="Legal First names",
                    ),
                ),
                (
                    "legal_last_names",
                    models.CharField(
                        blank=True,
                        help_text="First name of the user submitting KYC application - As shown in documents.",
                        max_length=255,
                        null=True,
                        verbose_name="Legal Last names",
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        blank=True,
                        help_text="The user's date of birth as per the identification document. The date of birth must match The user's ID",
                        null=True,
                        verbose_name="Date of Birth",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="The primary e-mail address of the user submitting KYC application",
                        max_length=150,
                        verbose_name="Email Address",
                    ),
                ),
                (
                    "address_line_1",
                    models.CharField(
                        help_text="The Address Line 1 of the user submitting KYC application. Must be from The user's country of Residence indicated at the time of registration.",
                        max_length=255,
                        verbose_name="Address Line 1",
                    ),
                ),
                (
                    "address_line_2",
                    models.CharField(
                        blank=True,
                        help_text="The Address Line 2 of the user submitting KYC application. Must be from The user's country of Residence indicated at the time of registration.",
                        max_length=255,
                        null=True,
                        verbose_name="Address Line 2",
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        help_text="The State/Region/Province of the user submitting KYC application. Must be from The user's country of Residence indicated at the time of registration.",
                        max_length=255,
                        verbose_name="State/Region",
                    ),
                ),
                (
                    "zip_code",
                    models.CharField(
                        help_text="The zip code or postal code of the user submitting KYC application. Must be from The user's country of Residence indicated at the time of registration.",
                        max_length=10,
                        verbose_name="Zip Code",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        help_text="The city of the user submitting KYC application. Must be from the users country of Residence indicated at the time of registration.",
                        max_length=255,
                        verbose_name="City",
                    ),
                ),
                (
                    "identification_type",
                    models.CharField(
                        choices=[
                            ("national_id", "National ID"),
                            ("passport", "Passport"),
                            ("drivers_license", "Drivers License"),
                        ],
                        default="national_id",
                        help_text="The type of identification document that the user has provided to the bank such as passport or national ID card. Chosen credential must not be expired. Document should be good condition and clearly visible. File is at least 1 MB in size and has at least 300 dpi resolution.",
                        max_length=21,
                        verbose_name="Photo ID Type",
                    ),
                ),
                (
                    "address_proof_type",
                    models.CharField(
                        choices=[("UTILITY", "Utility Bill")],
                        default="UTILITY",
                        help_text="Document that serves as a Proof of address. Chosen credential must not be expired. Document should be good condition and clearly visible. File is at least 1 MB in size and has at least 300 dpi resolution.",
                        max_length=21,
                        verbose_name="Proof of Address type",
                    ),
                ),
                (
                    "proof_of_address_document",
                    models.FileField(
                        help_text="The document must contain your name, the address and should not be older than 90 days. Chosen credential must not be expired. Document should be good condition and clearly visible. File is at least 1 MB in size and has at least 300 dpi resolution.",
                        storage="uploads/kyc/",
                        upload_to="",
                        verbose_name="Proof of Address",
                    ),
                ),
                (
                    "photo_id",
                    models.FileField(
                        help_text="The front side of The user's Photo Identitification. Chosen credential must not be expired. Document should be good condition and clearly visible. File is at least 1 MB in size and has at least 300 dpi resolution.",
                        storage="uploads/kyc/",
                        upload_to="",
                        verbose_name="Photo ID(front)",
                    ),
                ),
                (
                    "photo_id_back",
                    models.FileField(
                        blank=True,
                        help_text="The back side of The user's Photo Identitification. Chosen credential must not be expired. Document should be good condition and clearly visible. File is at least 1 MB in size and has at least 300 dpi resolution.",
                        null=True,
                        storage="uploads/kyc/",
                        upload_to="",
                        verbose_name="Photo ID(back)",
                    ),
                ),
                (
                    "selfie_with_id",
                    models.FileField(
                        blank=True,
                        help_text="Upload a photo with yourself and your Passport or both sides of the ID Card. The face and the document must be clearly visible.",
                        null=True,
                        storage="uploads/kyc/",
                        upload_to="",
                        verbose_name="Selfie with ID",
                    ),
                ),
                (
                    "kyc_status",
                    models.CharField(
                        choices=[
                            ("verified", "verified"),
                            ("unverified", "Unverified"),
                            ("pending", "Pending"),
                            ("rejected", "Rejected"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="Pending",
                        help_text="The KYC status of the user. The default is `Unverified`.",
                        max_length=28,
                        verbose_name="KYC Status",
                    ),
                ),
                (
                    "kyc_status_note",
                    models.TextField(
                        blank=True,
                        editable=False,
                        help_text="State the reason for issuing this status.",
                        max_length=255,
                        null=True,
                        verbose_name="KYC Status Note",
                    ),
                ),
                (
                    "status_update_date",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        help_text="Timestamp at which the resource status was updated.",
                        verbose_name="Status Update Time",
                    ),
                ),
                (
                    "politically_exposed_person",
                    models.CharField(
                        choices=[
                            ("pep", "Yes, I'm politically exposed"),
                            ("non_pep", "No, I'm not politically exposed"),
                        ],
                        default="not_pep",
                        help_text="A politically exposed person is one who has been entrusted with a prominent public function. A PEP generally presents a higher risk for potential involvement in bribery and corruption by virtue of their position and the influence that they may hold. `not_pep` implies user is not Politically Exposed Person and `pep` implies user is a Politically Exposed Person. Default is `not_pep` etc.",
                        max_length=16,
                        verbose_name="Politically Exposed Person(PEP)",
                    ),
                ),
                (
                    "place_of_birth",
                    models.CharField(
                        blank=True,
                        help_text="The place of birth of the user.",
                        max_length=255,
                        null=True,
                        verbose_name="Place of birth",
                    ),
                ),
                (
                    "identification_number",
                    models.CharField(
                        blank=True,
                        help_text="The number of the identification document provided by the person such as the passport number or the national ID card number.",
                        max_length=50,
                        null=True,
                        verbose_name="Photo Identification number",
                    ),
                ),
                (
                    "identification_issue_date",
                    models.DateField(
                        blank=True,
                        help_text="The date of issue of the identification document provided by the user",
                        null=True,
                        verbose_name="ID Issue date",
                    ),
                ),
                (
                    "identification_expiry",
                    models.DateField(
                        blank=True,
                        help_text="The date of expiry of the identification document provided by the user",
                        null=True,
                        verbose_name="ID Expiry date",
                    ),
                ),
                (
                    "kyc_submitted_ip_address",
                    models.GenericIPAddressField(
                        blank=True,
                        editable=False,
                        help_text="The IP address of the user recorded at the time of registration.",
                        null=True,
                        verbose_name="KYC Submitted IP",
                    ),
                ),
                (
                    "registered_ip_address",
                    models.GenericIPAddressField(
                        blank=True,
                        editable=False,
                        help_text="The IP address of the user recorded at the time of registration. Registered IP address is compared with the Submitted IP address to make sure client is within the same region.",
                        null=True,
                        verbose_name="Registered IP",
                    ),
                ),
                (
                    "accept_terms",
                    models.BooleanField(
                        default=False,
                        help_text="Agreements collected from the user, such as acceptance of terms and conditions, or opt in for marketing. This defaults to False.",
                        verbose_name="Accepted Terms",
                    ),
                ),
                (
                    "agreed_to_data_usage",
                    models.BooleanField(
                        default=False,
                        help_text="Consent to us using the provided data, including consent for us to verify the identity of relevant individuals with our service providers and database owners in accordance with the Identity Verification Terms. This defaults to False.",
                        verbose_name="Agreed to Data Usage",
                    ),
                ),
                (
                    "kyc_review_date",
                    models.DateTimeField(
                        blank=True,
                        editable=False,
                        help_text="Date on which KYC check was performed.",
                        null=True,
                        verbose_name="KYC Checked Date",
                    ),
                ),
                (
                    "reviewer_ip_address",
                    models.GenericIPAddressField(
                        blank=True,
                        editable=False,
                        help_text="Recorded IP address of the staff reviewing KYC application.",
                        null=True,
                        verbose_name="Staff Submitted IP",
                    ),
                ),
                (
                    "kyc_refused_code",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("EXPIRED_DOCUMENT", "Document Expired"),
                            ("DOCUMENT_DOES_NOT_MATCH_USER_DATA", "Document does not match user data"),
                        ],
                        help_text="The type of reason for refusal",
                        max_length=34,
                        null=True,
                        verbose_name="KYC Refused Code",
                    ),
                ),
                (
                    "citizenship",
                    models.ForeignKey(
                        help_text="The citizenship of the user submitting KYC application. A proof of such citizenship is required by form of National ID or Passport.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="locations.country",
                        verbose_name="Citizenship",
                    ),
                ),
                (
                    "country_residence",
                    models.ForeignKey(
                        blank=True,
                        help_text="The country in which the person primarily resides. A proof of residence is required and requested upon change of residence.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="locations.country",
                        verbose_name="Country of Residence",
                    ),
                ),
                (
                    "reviewer",
                    models.ForeignKey(
                        blank=True,
                        help_text="The KYC staff or representative who checked and reviewed KYC application.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="kyc_reviewer",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Reviewer",
                    ),
                ),
                (
                    "second_citizenship",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user's second Nationality (if he/she has dual Nationality).",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="locations.country",
                        verbose_name="Second Citizenship",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Unique identifier of the user that owns the activity.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="KYC User",
                    ),
                ),
            ],
            options={
                "verbose_name": "KYC Application",
                "verbose_name_plural": "KYC Applications",
                "db_table": "kyc_applications",
                "permissions": [
                    ("verify_kyc", "Verify KYC Application"),
                    ("reject_kyc", "Reject KYC Application"),
                    ("merge_kyc", "Merge KYC data with user Information"),
                ],
            },
        ),
    ]
